<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Xenon on ljzsdut</title><link>https://note.ljzsdut.com/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/Xenon/</link><description>Recent content in Xenon on ljzsdut</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://note.ljzsdut.com/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/Xenon/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://note.ljzsdut.com/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/Xenon/xenon_on_MySQL5.7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://note.ljzsdut.com/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/Xenon/xenon_on_MySQL5.7/</guid><description>20200501
环境信息 操作系统配置 软件安装 MySQL层面的配置 启动三个数据库实例并完成基础配置 配置GTID+半同步、创建复制架构 创建复制用户 配置复制架构 配置半同步 创建数据库用户root@127.0.0.1 配置xenon 安装依赖 获取、部署Xenon 编译（所有节点） 完成编译后， 规划文件目录结构（也可以不做） 建立config.path文件，以指定默认配置文件位置（所有节点） 将整个xenon目录所有者给mysql（所有节点） 配置xenon.json（所有节点） 启动集群 稳妥起见，在全部节点测试一下——切换到mysql用户，测试一下json文件的可读性及动作是否能够执行 启动Xenon 【node1】启动Xenon 启动集群后 通过Xenon集群进行备份、扩容节点 扩容节点的初步尝试 Xenon集群的搭建总结： Xenon集群节点状态的探索总结： Xenon backup/rebuild 探索总结： 环境信息 IP port role hostname 192.168.188.51 3306 node1 ms51 192.168.188.52 3306 node2 ms52 192.168.188.53 3306 node3 ms53 192.168.188.54 3306 node4 ms54 192.168.188.50 3306 s-ip null CentOS Linux release 7.6.1810 mysql-5.7.30-linux-glibc2.12-x86_64 xtrabackup version 2.4.20 由于Xenon本身架构的限制，暂不支持单节点多实例的方式建立高可用。可以使用docker，本来Xenon就是基于docker架构设计的。
操作系统配置 1.创建mysql用户，如果之前已经配置，可能需要调整mysql账号 使mysql用户可以login</description></item></channel></rss>