<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ljzsdut</title><link>https://note.ljzsdut.com/%E4%BA%91%E5%8E%9F%E7%94%9F/Prometheus/Prometheus-operator/%E7%9B%91%E6%8E%A7%E9%A1%B9%E9%85%8D%E7%BD%AE/</link><description>Recent content on ljzsdut</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://note.ljzsdut.com/%E4%BA%91%E5%8E%9F%E7%94%9F/Prometheus/Prometheus-operator/%E7%9B%91%E6%8E%A7%E9%A1%B9%E9%85%8D%E7%BD%AE/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://note.ljzsdut.com/%E4%BA%91%E5%8E%9F%E7%94%9F/Prometheus/Prometheus-operator/%E7%9B%91%E6%8E%A7%E9%A1%B9%E9%85%8D%E7%BD%AE/blackbox-exporter/blackbox-exporter%E7%9B%91%E6%8E%A7%E6%96%87%E6%A1%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://note.ljzsdut.com/%E4%BA%91%E5%8E%9F%E7%94%9F/Prometheus/Prometheus-operator/%E7%9B%91%E6%8E%A7%E9%A1%B9%E9%85%8D%E7%BD%AE/blackbox-exporter/blackbox-exporter%E7%9B%91%E6%8E%A7%E6%96%87%E6%A1%A3/</guid><description>工作逻辑 prometheus&amp;ndash;&amp;gt;blackbox-exporter(相当于代理服务器)&amp;ndash;&amp;gt;target。
也可以使用curl命令对blackbox-exporter发送请求：
curl &amp;#34;http://10.108.196.52:9115/probe?target=https://www.baidu.com&amp;amp;module=http_2xx&amp;#34; 部署blackbox-exporter cat &amp;gt;&amp;gt;&amp;#34;EOF&amp;#34; |kubectl apply -f - apiVersion: v1 kind: ConfigMap metadata: name: blackbox-config namespace: cattle-prometheus data: blackbox.yml: |- modules: #Blackbox-Exporter中所有的探针均是以 Module 的信息进行配置，模块名字自定义 http_2xx: # http Get请求 检测模块 prober: http timeout: 10s http: valid_http_versions: [&amp;#34;HTTP/1.1&amp;#34;, &amp;#34;HTTP/2&amp;#34;] valid_status_codes: [200,301,302,308] method: GET no_follow_redirects: false preferred_ip_protocol: &amp;#34;ip4&amp;#34; #默认ipv6 ，目前国内使用ipv6很少。 http_post_2xx: # http post 监测模块 prober: http timeout: 10s http: valid_http_versions: [&amp;#34;HTTP/1.1&amp;#34;, &amp;#34;HTTP/2&amp;#34;] method: POST preferred_ip_protocol: &amp;#34;ip4&amp;#34; # headers: # Content-Type: application/json ##header头 # body: &amp;#39;{&amp;#34;hmac&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;params&amp;#34;:{&amp;#34;publicFundsKeyWords&amp;#34;:&amp;#34;xxx&amp;#34;}}&amp;#39; ##传参 tcp_connect: # TCP 检测模块 prober: tcp timeout: 10s dns: # DNS 检测模块 prober: dns dns: transport_protocol: &amp;#34;tcp&amp;#34; # 默认是 udp preferred_ip_protocol: &amp;#34;ip4&amp;#34; # 默认是 ip6 query_name: &amp;#34;kubernetes.</description></item><item><title/><link>https://note.ljzsdut.com/%E4%BA%91%E5%8E%9F%E7%94%9F/Prometheus/Prometheus-operator/%E7%9B%91%E6%8E%A7%E9%A1%B9%E9%85%8D%E7%BD%AE/etcd-monitor-rancher/etcd%E7%9B%91%E6%8E%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://note.ljzsdut.com/%E4%BA%91%E5%8E%9F%E7%94%9F/Prometheus/Prometheus-operator/%E7%9B%91%E6%8E%A7%E9%A1%B9%E9%85%8D%E7%BD%AE/etcd-monitor-rancher/etcd%E7%9B%91%E6%8E%A7/</guid><description>五、etcd监控 自定义抓取k8s集群外部target的三个步骤：servicemonitor + service + endpoint
【前提】
如果要抓取etcd的metrics，需要设置etcd的参数来暴露metrics：--listen-metrics-urls='http://0.0.0.0:2381'
1、创建ServiceMonitor cat &amp;lt;&amp;lt;EOF |kubectl apply -n cattle-prometheus -f - apiVersion: monitoring.coreos.com/v1 kind: ServiceMonitor metadata: labels: app: exporter-node chart: exporter-node-0.0.1 heritage: Tiller io.cattle.field/appId: cluster-monitoring release: cluster-monitoring source: rancher-monitoring name: prometheus-operator-kube-etcd namespace: cattle-prometheus spec: endpoints: - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token port: http-metrics relabelings: - action: replace regex: (.+):(.+) replacement: $1 sourceLabels: - __address__ targetLabel: host_ip namespaceSelector: matchNames: - kube-system selector: matchLabels: app: prometheus-operator-kube-etcd release: prometheus-operator EOF 2、创建Service、Endpoints cat &amp;lt;&amp;lt;EOF |kubectl apply -n cattle-prometheus -f - apiVersion: v1 kind: Service metadata: name: etcd-k8s namespace: kube-system labels: app: prometheus-operator-kube-etcd release: prometheus-operator spec: type: ClusterIP ports: - name: http-metrics port: 2381 protocol: TCP --- apiVersion: v1 kind: Endpoints metadata: name: etcd-k8s namespace: kube-system labels: app: prometheus-operator-kube-etcd release: prometheus-operator subsets: - addresses: - ip: 172.</description></item></channel></rss>